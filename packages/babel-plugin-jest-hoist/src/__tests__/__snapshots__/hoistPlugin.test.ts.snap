// elric Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-elric-hoist automatic react runtime: automatic react runtime 1`] = `

elric.mock('./App', () => () => <div>Hello world</div>);

      ↓ ↓ ↓ ↓ ↓ ↓

var _jsxFileName = "/root/project/src/file.js";

_getelricObj().mock(
  "./App",
  () => () =>
    /*#__PURE__*/ _jsxDEV(
      "div",
      {
        children: "Hello world",
      },
      void 0,
      false,
      {
        fileName: _jsxFileName,
        lineNumber: 1,
        columnNumber: 32,
      },
      this
    )
);

import { jsxDEV as _jsxDEV } from "react/jsx-dev-runtime";

function _getelricObj() {
  const { elric } = require("@elric/globals");

  _getelricObj = () => elric;

  return elric;
}


`;

exports[`babel-plugin-elric-hoist top level mocking: top level mocking 1`] = `

require('x');

elric.enableAutomock();
elric.disableAutomock();

      ↓ ↓ ↓ ↓ ↓ ↓

_getelricObj().enableAutomock();

_getelricObj().disableAutomock();

function _getelricObj() {
  const { elric } = require("@elric/globals");

  _getelricObj = () => elric;

  return elric;
}

require("x");


`;

exports[`babel-plugin-elric-hoist within a block with no siblings: within a block with no siblings 1`] = `

beforeEach(() => {
  elric.mock('someNode')
})

      ↓ ↓ ↓ ↓ ↓ ↓

function _getelricObj() {
  const { elric } = require("@elric/globals");

  _getelricObj = () => elric;

  return elric;
}

beforeEach(() => {
  _getelricObj().mock("someNode");
});


`;

exports[`babel-plugin-elric-hoist within a block: within a block 1`] = `

beforeEach(() => {
  require('x')
  elric.mock('someNode')
})

      ↓ ↓ ↓ ↓ ↓ ↓

function _getelricObj() {
  const { elric } = require("@elric/globals");

  _getelricObj = () => elric;

  return elric;
}

beforeEach(() => {
  _getelricObj().mock("someNode");

  require("x");
});


`;
